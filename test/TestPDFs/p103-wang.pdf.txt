

multitasking bar: prototype and evaluation of introducing  the task concept into a browser  qing wang1, huiyou chang2  sun yat-sen university  high education mega center, guangzhou, china  1 ericwangqing@gmail.com   2 isschy@mail.sysu.edu.cn     abstract  this paper clarifies two common patterns of multitasking on  the web, namely multiple tasks (mt) and multiple session  task (mst). to support both of these, the task concept  needs to be introduced into a browser. an online pilot survey  has revealed which attributes of the task concept are most  significant to web users and as a result a simple prototype,  the multitasking bar (mb), is proposed based on these  findings. the mb copes with the multitasking needs of both  mt and mst in the browser by providing functions for task  related web page management and task schedule  management. a two-session controlled experiment has been  conducted to evaluate the mb and to compare user  performance and experience when multitasking on the web  with and without support for mt and mst. results show  that support for both mst and mt significantly improves  user task performance efficiency and greatly enhances the  user experience when multitasking on the web.  author keywords  browser, tasks, multitasking, revisitation, multiple  sessions task  acm classification keywords  h.5.2 [information interfaces and presentation]: user  interfaces — user centered design, prototyping,  evaluation/methodology; h5.m. [information interfaces and  presentation]: miscellaneous.  general terms  design, experimentation, human factors, measurement,  performance  introduction  currently with the ubiquity of the internet, we are doing  more and more of our jobs online [16,40,20], with the most  important workplace for these jobs being the browser. on the  other hand, humans are naturally multitasking beings, often  either doing several tasks simultaneously and alternatively,  or executing a single task through several working sessions.  for instance, there are several reports in the literature that a  great many managerial tasks can be characterized by their  brevity, variety and fragmentation [19,31,32]. this leads to  simultaneously executed activities, interruptions and  resumption of tasks both on and off the web [30].  meanwhile, a diary study of knowledge workers has  identified an average of 50 task shifts per person during a  typical working week [18], and a log study has identified an  average of 3.74 e-mail or im-driven task shifts per hour,  taking between 8 and 10 minutes on average for the person to  return to the interrupted task [21].   cognitive psychologists have studied many aspects of  multitasking or task switching, providing several definitions  of multitasking [15,33]. just et al. and rubinstein et al. stated  that multitasking is the ability of humans to handle  simultaneously the demands of multiple tasks through task  switching [24,36], and that it allows people to cope with ever  increasing complex environments by handling multiple tasks  through task switching [14,26]. we follow these definitions  in this paper and concentrate especially on tasks that depend  on web resources, typically web pages. when users  multitask while working on the web, they switch among  several tasks running simultaneously, often suspending and  then resuming their task(s). in doing so, they tend to follow  one of two common patterns, which we define as  multi-tasks (mt) and multi-session-task (mst). in this  paper, multi-tasks (mt) is defined as the pattern of  executing a set of tasks simultaneously, where the execution  often depends on bundles of web pages. mst on the other  hand, is the pattern of executing a single task spanning  multiple web sessions (as in mackay’s definition [27]). for  example, whilst shopping on an e-commerce web site, and  doing other task(s) on the web at the same time, i.e.,  planning the itinerary of a vacation, constitutes mt.  furthermore, the shopping task is classed as an mst if it  spans more than one web session; in other words, if at some  point the browser is closed and the shopping task temporarily  suspended, and then later resumed in a new instance of the  browser.   these patterns of mt and mst in web use are very common,  and have frequently been reported in the literature. in 2002,  spink et al. found that multitasking information seeking and  searching is common human behavior as many ir system  users conduct information seeking and searching on related  or unrelated topics [38]. the study by sellen et al. of  knowledge workers’ web use [37] reported that 40% of the  “information gathering” activities they observed were not  completed in a single sitting, often due to external    permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. to copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.  chi 2010, april 10–15, 2010, atlanta, georgia, usa.  copyright 2010 acm  978-1-60558-929-9/10/04....$10.00.  chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 103


interruptions. mackay and watters found that users with  tabbed browsing typically worked on several tasks during a  single web session [28]. morris et al. presented evidence that  users often conduct multi-session tasks, such as web  investigations, and they also found that “such tasks are not  adequately supported by current tools” [34].   in summary, there is significant evidence that both mt and  mst are typical patterns of web use, and should be well  supported by browsers. this means that there should be  some effective functions within the browser to help users  manage tasks whilst multitasking on the web, including  functions for managing bunches of web pages for  corresponding tasks both simultaneously and across web  sessions, and functions for managing a task’s status and  schedule. for example, in the aforementioned shopping  example, while shopping online a user may browse several  related web pages simultaneously. some pages may be  commodity pages from the actual e-commerce site, while  others may be web pages from other sites about these  commodities, such as user comments, background  information, and reviews. in this situation, all these web  pages comprise a bundle of resources forming the context for  the user’s shopping task. consequently, this resource bundle  should be able to be saved, found, and restored as a whole  whenever needed. furthermore, when work is done on more  than one task, the browser should provide better support than  it does at present. it should intuitively make sense of and  present the user with tasks to help switch quickly and easily  between them. it also should manage the status of the tasks,  to remind the user when these tasks must be completed, and  what their current status is. in short, what is needed is  support for (multi)task resource (web pages) management  and (multi)task schedule management in a browser.  unfortunately however, contemporary browsers do not  provide these kinds of functions, at least, not very well. in  almost all widely-used browsers, there is neither the concept  nor awareness of a task or task session, making it difficult to  detect or explicitly define a task, manage its status, and  hence save or resume work on it accordingly [34]. to  resolve this issue, users have resorted to various  workarounds, such as opening several browser windows or  tabs simultaneously for different tasks [25], bookmarking all  related web pages for a task as a group, and even writing the  urls of the relevant web pages for a task on paper [17,22]  to enable  continuing the task between sessions. besides  these workarounds, the most effective approaches hitherto  lie in various research prototypes and browser extensions  and plugins (for details, see the related work section).  we believe that if we explicitly introduce the task concept  into a browser and allow the browser to manage the task  status and related web pages for both mt and mst, it will  promote user performance efficiency and enhance user  experiences when multitasking on the web. our study  attempts to answer two research questions:  how will the introduction of the task concept into a browser  impact a user’s multitasking performance efficiency on the  web?  how will this introduction impact a user’s experience while  multitasking on the web?  in the rest of this paper, we first review related works on  multitasking in a browser. we then introduce the pilot survey  used to investigate how users expect to cope with  multitasking in a browser. next, we describe the design and  implementation details of our prototype, the multitasking  bar (mb). thereafter, we report on the user study conducted  to test the impact of introducing the task concept into a  browser by comparing user performance efficiency and  experience when multitasking on the web with and without  support for mt or mst in the browser. next, we analyze  data collected from our user study to ascertain research  results and implications. finally, we conclude by discussing  the contributions of this paper and suggesting possible future  work.  related work  various studies have been conducted to investigate the  multitasking features and patterns in current browsers.  jhaveri and räihä argued that the weakness of a browser’s  support for mst is inherited from the weakness of  revisitation support in a browser [22]. keelar et al. provided  a taxonomy of web tasks and argued that task oriented  revisiting functionality should be provided in a user’s web  interactions [25]. moreover, mackay and watters revealed  the importance of better task session resumption support in a  browser through a field study that investigated users’  interactions with the web on mst. they also identified  three main features needed by browser tools to support mst  [28]. however, all these studies typically focused on mst  and hardly considered mt.   previous studies also proposed approaches to enhance mst  in a browser. jhaveri and räihä proposed session highlights  to support mst in web-based research tasks [22], in which a  research task is visualized as a workspace and each related  web page is represented as a thumbnail. spink et al.  proposed an approach for interactive information retrieval  contextually within a multitasking framework [39]. morris et  al. built a search-centric task management tool named  searchbar as a plugin for internet explorer [34]. by using  search queries as a fundamental organizational metaphor, the  searchbar groups a user’s browsing history into  topic-centric tasks, and provides a quick task context  resumption function. mackay and watters developed 3  prototypes to enhance a browser’s support for mst [29].  these prototypes can store and resume a bundle of web  pages as a task context across web sessions, and can switch  between saved tasks by selecting the task in a dropdown list.  however, all these approaches concentrated solely on mst,  and ignored mt. they investigated how to save and resume  a task across web sessions, and not how to present multiple  tasks running simultaneously in a browser in such a way as to  chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 104


make sense to the user. moreover, with the exception of  mackay and watters’ study, the other studies did not even  incorporate the task concept, which means that in these  approaches users are not able to explicitly define and track a  task on its necessary attributes, such as end date (deadline),  status, etc. furthermore, in these approaches tasks differ in  that they are specific to different application domains in the  different approaches. each of these studies, except for  mackay and watters’, can only support multitasking for a  particular kind of web tasks, and not for generic web tasks.  in addition, except for mackay and watters’ approach, none  of them considered task schedule management.  besides these publications, there are also many plug-ins,  extensions and even built-in functions for browsers that can  be used to support mst and mt partially. save session [1]  and session manager [2] for firefox and tabsaver for  internet explorer [3] can save a current web session and  restore it at the next startup of the browser. in fact, in firefox  2.0+, internet explorer 7.0+, safari 0.9+, and opera 4.0+,  this is a built-in feature of the browser. however, although  this feature can support mst in two adjacent sessions  (instances) of the browser, it cannot support either defining  task related web pages explicitly or resuming a task to a  state before several browser running sessions. another  function that can be used to support mt is tab grouping,  which is provided by some firefox extensions such as multi  row bookmarks toolbar [4], group/sort tabs [5], tab kit  [6], and tabgroups manager [7], etc. nevertheless, none of  these have the explicit task concept built in. therefore, once  again they cannot resume tasks across more than one web  session and do not support task schedule management.  moreover, we have not found any literature on the impact of  these extensions on the user’s performance or experience  when multitasking on the web, and most of the time the  improvement in user efficiency and enhancement of user  experience are just taken for granted.   in summary, previous studies and tools seldom introduce the  concept of a task into a browser directly and explicitly, and  provide little in the way of task schedule management.  furthermore, the impact of incorporating the task concept in  a browser has not been studied thoroughly. to extend these  studies we have implemented a simple prototype, the  multitasking bar (mb), which explicitly incorporates the  task concept in a browser and supports both mt and mst.  pilot survey  before introducing the task concept into a browser for  multitasking, we need to answer the question of what  attributes the task concept should have in a  multitasking-enabled browser or, in other words, what  attributes of a task are most significant to users multitasking  on the web? unfortunately, although some previous studies  explored multitasking features of web tasks, they typically  concentrated on task types, task resumption times or task  dwelling times, and browser functions to support  multitasking [18,25,28]. they did not answer the questions  we have posed here.   for this reason, we conducted an online survey at  surveygizmo [8] about multitasking on the web between  april 10 and may 10, 2009. we received 582 valid responses  with 82% of the respondents being male. age of the  respondents ranged from 18 – 57 years old (median=28).  the respondents had varied occupations, including teachers,  software developers, librarians, salespersons, assistants and  secretaries, marketing specialists, managers, and students.  all respondents identified themselves as either average (31%)  or expert (69%) web users; none were novice users. our  survey asked 32 questions about a variety of web use habits,  including their usage of the browser, and their experience  with multitasking (having experience of mt or not, having  experience of mst or not), etc.   many of these questions are beyond the scope of this paper  and thus here, we only report on the most relevant questions.  it should also be noted that the data presented in this section  are self-reported, and thus we have used these results as  design guidelines only, since we cannot verify their absolute  accuracy.  in the survey, respondents reported having experience of mt  (92%) and mst (94%), and when multitasking on the web,  on average they often had 2 – 8 tasks (μ=3.46, σ= 1.56)  ongoing simultaneously. the most important question in the  survey is question 19, which relates to the significance of 6  attributes1 of the task concept which we considered to be  candidates for incorporation in a browser in our research  prototype. the results are shown in figure 1. of the 582  respondents, 560 (96%, having either mt or mst  experience) answered the question2, and more than half of  these identified name (93%), end date (71%), status (53%)  and active time (51%) as significant.  we also recruited 48 participants who are firefox users  familiar with tabs for our subsequent user study (the limit of  this sample population is discussed in discussion).  system design and implementation  we designed a simple prototype, the multitasking bar (mb),  to evaluate the impact of introducing the task concept into a  browser. it was implemented using the open source firefox                                                             1 here we selected the 6 attributes from task attributes which appear in  almost all well-known task management tools, such as microsoft project  [10], microsoft outlook [11], igtd [12], todolist [13], etc. other attributes  such as remind method, remind time, assign to, report to, etc. were discarded  based on the results of a pilot survey of this pilot survey in which most of  the 20 respondents marked these attributes as irrelevant to multitasking on  the web.  2 this question was not posed to respondents who identified themselves as  web users without multitasking experience.  figure 1. distribution on significance of task attributes. chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 105


extensions tab kit [6], tabgroups manager [7], and tlogger  [9]. three screenshots of the mb are shown in  figure 2.   the mb supports both mt and mst. it groups web pages  for a task into a bundle and presents a task as a tab in the  multitasking bar (1 in  figure 2). it manages the status of  tasks, and can store, resume, rollback, and close related web  pages as a whole. it also collects user interactions with the  browser for our user study, and can be configured with  different function sets for different users3. since the mb was  designed to evaluate the impact of incorporating the task  concept in a browser, we made it as simple as possible. that  is, we excluded values that may be added by additional  functions rather than essential advantages brought about by  introducing the task concept into a browser.  task concept  the task concept in the mb only has four attributes, namely  name, status, end date, and active time, which were  significant to most of the respondents in our pilot  survey. it is worth mentioning here that none of these  attributes, except name, have generally been incorporated in  a browser in previous studies; mackay and watters  [27,28,29] used end date, but without status and active time.   in the mb, the name of a task is either defined by the user or  automatically generated by the mb by using the title of the  first web page (excluding the search engine web pages)  opened in the task. the mb represents a task as a task tab  in the multitasking bar, and its name and status are shown as  label and status icons, respectively (1 in  figure 2). users  can also optionally define the end date of a task, from which  the accumulated active time of the task will automatically be  calculated by the mb and shown in the tooltip of the tab for                                                             3 we used 3 different mb configurations for 3 groups in our user study; see  user study for the details.  the task (6 in  figure 2). furthermore, according to its end  date, at any time a task may be in one of the four states,  namely in process, approaching end date,  delayed, and closed. if a task is approaching its  deadline it will be shown with an approaching end  date status with the icon  on its tab, and if it has already  missed its end date it will be shown with a delayed status  using icon .  tasks have states, especially a mst. at different times, the  related web pages for a task may be different. this feature  has often been neglected by previous studies all of which  assumed the user only wanted to resume a task to the state at  its last running. but in fact, users occasionally need to roll a  task back to a state other than that at the last running. the  mb supports this feature; a user can roll back a task to any  previous state stored, by selecting it from a drop down list in  the context menu of the task tab (see 2 in  figure 2).   tasks have structure. a large task often consists of a few  smaller tasks, and sometimes the relationships between these  child tasks can be complex. there may be certain business  rules in these relationships, or these child tasks may even  comprise complicated business processes or workflows. this  complexity is beyond the scope of this study and we merely  leave the management of the task structure to the user.   sometimes tasks may be reused, especially the routine tasks  recognized by kellar et al. [25]. although the mb has no  dedicated function to reuse a task and does not even  distinguish tasks running once from tasks running many  times, it implicitly supports this feature. this means that a  user can ‘reuse’ a task by rolling it back to a preferred  stored state.  figure 2. screenshots of the mb. 1 – multitasking bar, 2 – context menu of task tab, 3 – context menu of  multitasking bar, 4 – status icon, 5 – tabs of web pages of current task, 6 – tooltip of task tab.  chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 106


grouping strategy  there are several strategies for grouping web pages to a  related task in previous studies [22,29,34]. to make this as  simple as possible, the mb follows and extends the strategy  of mackay and watters [29], that is, first grouping any newly  opened web page into the current active task unless the user  explicitly defines it as a new task, and then permitting the  user to move any web page to another task or even to drop it  to the special “non-task” task. here the “non-task” task is  a dummy task in the mb which represents any casual web  surfing without a specific goal. hence it collects web pages  that do not belong to any real task. it is always shown at the  end of the multitasking bar as a task tab with a grey  background (on the far right of 1 in  figure 2).  user scenario  a typical scenario for using the mb follows. in the  beginning a user starts a task by optionally giving it a name  and end date. any newly opened web page is then collected  unless the user moves it to another task or drops it to the  “non-task”. users can store the state of a task at any time.  when the browser is about to close, the mb automatically  stores the states of all tasks active in the browser. hence  afterwards the user can resume from a stored state. users can  also easily switch between tasks running simultaneously in  the browser, and can suspend, resume, or close any of them  as desired. the mb also highlights the status, end date, and  accumulated active time of the tasks, making the user aware  of her task schedule painlessly.   data collection  the mb can collect user interactions with the browser and  itself, including any opening, closing, leaving, or returning to  a web page, and creating, renaming, storing, and resuming a  task, as well as moving and dropping a web page from a task.  the mb also takes and stores screenshots when any new task  is defined or any new tab is opened. this data can be used to  calculate the time a user has spent on a particular task, and to  compare the different usage patterns of users.   configuration  after installation, the mb can be configured with or without  mt and/or mst support. when the mt functions are  disabled, the plus button on the multitasking bar disappears  and there is only one real task available in the browser.  when both mt and mst are disabled, the multitasking bar  disappears and the mb acts only as a user browser  interaction data collector.   user study  our study goal is to evaluate the impact of incorporating the  task concept in a browser on a user’s performance efficiency  and experience when multitasking on the web. we  conducted a two session experiment on july 6 and july 13,  2009. our experimental method was inspired by the method  of morris et al. [34], and we extended it to cope with our  study goal. in the experiment we simulated a manager –  secretary working scenario, in which participants acted as  secretaries and were instructed by their managers, us the  experimenters, to complete several tasks. they were  required to do several tasks spanning the two sessions and  their interactions with the browser and other useful data  were collected for analysis.  demographics  we recruited 48 participants (15 female). they ranged in age  from 19 to 43 years (median=24.5), and had a variety of  occupations, including 25 students majoring in computer  science, 3 students majoring in economics, 6 students  majoring in psychology, 2 student majoring in management,  3 teachers, a librarian, 4 insurance salespersons, and 4  marketing specialists. participants were given vouchers for  food or beverages from the cafeteria as a gratuity.  methodology  we used a between subjects design for our user study, with  16 participants each in one of 3 different groups. participants  in group 1 (g1) were controlled like ordinary web users  without explicit multitasking support, while participants in  group 2 (g2), similar to users of previous approaches  discussed in related work, had mst support provided  by the mb. finally, participants in group 3 (g3) had full  support for mt and mst provided by the mb. we  conducted the experiment in two separate sessions at our lab.  sessions lasted 110 minutes each including an additional  questionnaire, and were scheduled one week apart.   we created the same web working environment for each  participant in both sessions, including a computer with a 19’  screen with the following software installed: windows xp  professional, firefox with mb, microsoft instant messenger  (mim), and windows office 2003. we instructed the  participants that they could use any available tools to assist  them in their tasks, including pen and paper (provided).  on june 29, a week before the beginning of the first session,  we held a 20 minute training session of the mb for the  participants in g2 and g3 according to their different  configurations (with or without mt support) and asked them  to practice using the mb during the following week. they  reported their tasks created in mb in their practices, g2  (μ=4.47, σ=.79), g3 (μ=4.02, σ=.47).  first session  in the first session, all participants were required to complete  5 tasks4, and the manager (experimenter) launched these  tasks one by one at 10 minute intervals by sending mim  group messages and delivering the required documents to all  participants. all these tasks had been completed by the  researchers in a pilot study to estimate the time needed for  each task. the results showed that about 142 minutes were  required to complete all tasks, which means that the  participants were not likely to finish all of these tasks in a  single experiment session. it is worth emphasizing here that  although we asked participants to resume and complete these  tasks in the second session, we did not inform them of this  until the start of the second session.                                                              4 according to our pilot study, participants had 3.46 tasks on average and a  maximum of 5.21 tasks. therefore we designed 5 tasks for our experiment,  2 of which (tasks 2, 5) were simple and could be done quickly.   chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 107


for each task, we asked the participants each to submit a  microsoft word document containing the results of their  work. they did this based on a semi-complete word file  issued by the experimenter at the beginning of the task, and  were asked to fill in all blanks in the file, i.e., street name of a  particular place, date of a specific event, etc., and to  complete several unfinished paragraphs.   task 1 was the same as task 1 in morris et al.’s methods [34].  the manager requested that the assistants complete the  itinerary for his upcoming business trip to prague no later  than july 14 (none of the participants had ever visited  prague). he told participants his itinerary requirements, such  as the dates of travel, his desire to visit three famous historic  sites and see three theatre productions, etc. and asked the  participants to finalize his itinerary no later than the  following week.   task 2 was an easy job, and the same as task 2 in morris et  al.’s methods [34]. participants were required to find a  restaurant for the manager in chicago where he could take a  client for lunch. they were asked to finish this task  immediately in no more than 10 minutes, and were asked to  fill in the blanks of restaurant name, address, telephone, 5  recommended cuisines, reasons for recommendations, etc.  when the time was up, the experimenter instructed all  unfinished participants to stop working on the task.  in task 3, we required participants to finish a semi-complete  report on a 2008 summary of the environmental industry in  the united states (none of the participants were engaged in  the environmental industry at the time). participants were  required to fill in the blanks of the industry gross product,  leading equipment manufacturers of advanced waste  disposal, smog mitigation and water purification, etc., and to  finish two paragraphs about technology and investment  trends, with each paragraph having at least 500 words.  task 4 was another long-term task whose deadline was july  11. participants were asked to complete a semi-complete  speech script for the manager’s speech at an environmental  forum. the report contained 20 blanks, such as the name of  the chairman of the forum, city of the event, etc., and two  uncompleted paragraphs about environmentalism and  ecologicalism, both requiring more than 500 words.   task 5 was also easy. participants were required to write a  recommendation for a digital camera the manager wished to  purchase that met certain resolution and zoom requirements.   at the end of the session, the experimenter instructed all  participants to stop working, and then asked them to  complete an online questionnaire soliciting demographic  information, information about their browsing habits, and  multitasking strategies employed by them, and feedback on  the mb tool (g2 and g3). specifically, they were required to  state how many minutes they had spent on each task, and for  the unfinished tasks how many minutes they would need to  complete them.  after each participant left, the experimenter saved all states  by storing the firefox’s profile of the participant and any  documents created in the session in a zip file, and collecting  paper notes left on the desk in a file folder marked with the  participant’s name.  second session  when the participants returned for the second session, one  week later on july 135, the setup was the same as in the first  week, and firefox had retained any settings they had accrued  during the first session (bookmarks, history, mb entries,  etc.), plus 280 history visitation records and 4 bookmarks  intentionally added to each participant’s profile6 to populate  it as if it had been used by the participant during the week.  all their paper notes were on the desk as they had left them.  however, we replaced the in-process result documents for  their tasks with the unprocessed blank template files  originally issued by the experimenter.   we informed the participants that they would continue in  their role as secretary to the manager and that the computer  was in the exact state they had left it the previous week,  except that a computer virus had destroyed their work result  files. then we instructed all participants to report on the  progress on their tasks giving task name, end date, status,  time they had spent, and time still needed to complete the  task. each of them was asked to submit a report within 10  minutes. it is worth mentioning here that we did not tell them  how many tasks there were or what they were; instead, we  told them that if they couldn’t remember, they could ask the  experimenter for help, but not the other participants. ten  minutes later, we gave participants the correct information  about their tasks’ status according to the records from the  first session and instructed them to carry on with the tasks.  at the end of the second session, the experimenter  distributed another questionnaire similar to session 1, and  specifically with respect to the question on how much time  participants had spent on each task, including both  completed and uncompleted tasks.  data gathered  data gathered during the study included notes and  observations from four experimenters who observed each  session, questionnaires completed after each session, the  participants’ task result documents from each of the two  sessions, the transcripts of the instant messages, any other  digital or paper notes made by participants, and the  participants’ firefox profiles at the end of each session  including history, bookmarks, and user browser interaction  data collected by the mb.  results  during the two sessions7, the mb clearly impacted users’  multitasking on the web. the mb was used by participants                                                             5  two participants (one in g1, and another in g3) deviated from this  one-week gap between sessions, returning after 8 and 10 days, respectively.  6 according to our survey, participants view 38 web pages per day on  average, and create a bookmark every two days.  7 we use a t-test for normally distributed data, and a mann-whitney u test  and wilcoxon test for non-normally distributed data in between groups in  chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 108


in g2 (times of using mb functions, μ=23.99, σ=4.14) (11%  in all browsing actions) and g3 (μ=16.07, σ=4.64) (10%).  throughout the experiment, they used the mb to create tasks  g2 (μ=5.48, σ=.59), g3 (μ=5.02, σ=.46), and then to  hibernate and resume these g2 (μ=6.47, σ=2.77), g3  (μ=4.15, σ=0.40). analyses of the mb log data also show  that the introduction of the task concept by the mb changed  the participants’ browsing behavior ( table 1). mb users in  g2 (μ=37.20, σ=11.14) and g3 (μ=30.59, σ=14.44) opened  fewer web pages than those without it, g1 (μ=48.73,  σ=19.13), (p21<.04, p31<.01), and they performed fewer  navigation actions. the mb also changed participants’  revisitation strategies. participants with the mb used fewer  history tools provided by the browser than those without it  (table 1).  however, all groups had few bookmarks because  they were not aware that their tasks would be continued in  the second session (number of bookmarks for g1, g2 and g3  are 2, 0 and 1, respectively). moreover, the mb changed the  way participants used tabs. from  table 1 we can see that  mb users used fewer tabs than the others.  multitasking performance efficiency  the mb improved participants’ multitasking performance.  except for one user in g2 who failed to finish task 4, all other  mb users (97%) accomplished all their tasks in the  experiment. yet, among the participants not using the mb, 3  users (18%) had 4 tasks unfinished at the end of session 2.  there are differences between the groups’ mean times for  accomplishing all five tasks in our experiment. firstly, mb  users accomplished the tasks in less time than the others;  participants of g2 (μ=156.81, σ=16.80) and g3 (μ=144.94,  σ=12.69) used less time than those of g1 (μ=172.44,  σ=22.71), (p21<.04, p31<.01) to accomplish the tasks 8 .  secondly, participants with both mt and mst (g3) support  worked more efficiently than participants with only mst                                                                                                    same session analysis and in same group between sessions analysis  respectively. likert scale responses are on a scale of 1 to 5, where 1 =  strongly disagree and 5 = strongly agree.  8 according to the average time spent by experimenters in the pilot study on  every section (blanks, paragraphs to be completed) of each result document,  we estimated a proportionate completion time for the unfinished tasks of  participants based on the result document they submitted at the end of the  experiment and the time they spent on it.  support (g2) (p<.04). moreover, the decrease in mean task  time consumed brought about by mt is 11.87 minutes,  which is close to the decrease of 15.63 minutes brought  about by mst.   meanwhile, mb users performed fewer other browsing  actions.  table 1 shows that participants in g2 and g3 used  search engines significantly fewer times and copied and  pasted fewer times than those in g1. this fact plus the fact  mentioned previously that mb users accessed fewer web  pages indicate that the mb helped its users find the required  web resources quickly and accurately. equally important,  the mb was also helpful in “keeping found things found”  [23], since the participants in g2 and g3 also performed  fewer revisitation actions ( table 1).   we also found that to accomplish the tasks in the experiment,  participants in g2 (μ=15.17, σ=1.92) and g3 (μ=12.76,  σ=2.18) switched fewer times between tasks than those in  g1 (μ=17.86, σ=2.39), (p21<.01, p31<.01, p23<.01). once  again, participants with mt support in g3 performed better.   moreover, we found that mb users in g2 (μ=66%, σ=8%)  and g3 (μ=69%, σ<6%) revisited most of the web pages  they had used in the first session, whereas only 43% (σ=9%)  of the web pages visited in the first session were revisited by  participants in g1 ( p21<.02, p31<.01).  finally, the mb improved the user’s performance on  resuming tasks across web sessions. in session 2 of our  experiment, all participants in g2 and g3 successfully  resumed all their tasks left unfinished in session 1. but only  4 participants (25%) in g1 could achieve this without  experimenter’s help. other participants in g1 failed to  resume their tasks for various reasons. 6 of them (38%) could  not remember how many tasks there were in the experiment,  while 4 (25%) forgot at least one of their unfinished tasks. it  is astonishing to note that 2 in g1 (13%) even forget that they  had finished task 2 in the first session and tried to do it again  in session 2.   user experience  participants reported favorably about their experience using  the mb; they felt that it was easy to multitask on the web   g1 g2 g3 g1:g2 g1:g3 g2:g3 μ σ μ σ μ σ window and tab interactions t-test window actions 9.87 2.78 9.9 2.51 8.23 2.31 0.98 0.07 0.06 tab actions 88.61 20.85 74.54 15.64 60.82 17.73 0.03 0.01 0.03 task tab (mb) actions n/a n/a n/a n/a 23.99 4.64 n/a n/a 0.01 revisitation  history list 7.41 1.86 0.36 1.03 0.24 0.1 0.01 0.01 0.03 task resume n/a n/a n/a n/a 6.47 0.4 n/a n/a 0.02 followed links 40.53 7.52 31.73 7.16 32.08 5.98 0.01 0.01 0.88 navigation  search engine 36.96 8.23 24.14 5.7 20.7 7.48 0.01 0.01 0.15 look in page (find) 6.07 3.34 5.94 2.18 5.14 2.47 0.90 0.36 0.33 copy/paste actions 43.68 4.24 30.28 3.57 31.27 5.25 0.01 0.01 0.54  table 1. group statistics of interactions with browser (when p-value of t-test is less than .05, the null hypothesis is rejected)  chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 109


with the mb’s help. table 3 shows the participants’  likert-scale rating for the usability of the mb and their user  experience when multitasking on the web after both the first  and second sessions.  a participant in g3 said in her questionnaire that the mb  released her from the cognitive burden of remembering the  status and resources of tasks both within and across web  sessions and made working on multiple tasks pleasant and  efficient. an interesting observation is that, although  participants using the mb rated it as only moderately useful  during the first session, when they were able to use the mb to  resume their tasks, the usability rating increased greatly for  the second session. likewise, mb users with mt support  agreed significantly more with the statement that the mb is  helpful when working on multiple tasks simultaneously.   the usability rating for schedule management of the mb  increased dramatically after session 2. a conversation  between a participant in g2 and an experimenter during  session 2 explains this change. she said, “i admit that i  downgraded the schedule management feature of mb in  session 1. you know, although technically saying the end  date and active time is critical when having several tasks,  nobody really realizes it and bothers themselves to track  these data until these data are required.”   the mb helped participants track the time consumed on  each task. when we asked participants to report their task  status at the beginning of session 2, almost all participants in  g2 (14, 88%) and g3 (15, 94%) accurately reported the  name, current status (completed or not), and end date  required by manager, but none of participants in g1 could  do this. moreover, when estimating the total time needed for  all tasks, mb users in g2 (μ=17.42, σ=4.91) and g3  (μ=18.20, σ=5.55) deviated significantly less than the other  group, g1 (μ=23.15, σ=7.79), (p21<.02, p31<.04, p23>.06)  and thus they could make more accurate plans than the  others.  unlike what morris et al. found in a user study on the  searchbar [34], we found that participants agreed  moderately with the statement that the mb took too much  space in the browser. the reason for this difference might be  due to the fact that the searchbar was shown in a left pane of  the browser which consumes horizontal screen real estate,  while the mb was shown in a toolbar of the browser which  consumes more precious vertical screen real estate.  discussion  the results presented in the previous section confirm that the  participants found the mb is easy to use. it introduces the  task concept into a browser thereby improving a user’s  experience with multitasking. users thought that the mb  was easy to learn and to use, and they also thought that it  decreased their cognitive burden and improved their  performance when multitasking on the web. data collected  in the experiment support this view. mb users opened fewer  web pages, performed fewer navigation actions, and made  little use of traditional history tools, yet re-found required  web pages more easily. at the same time, they used less time  to accomplish tasks, and were better aware of and had better  control over their tasks. moreover, they were able to switch  between tasks and resume interrupted or suspended tasks  more quickly. in addition, they could remember the deadline  and current status of their tasks and were aware of the time  consumed on these tasks with little effort.   question g1 g2 g3 g1: g2 g1:g3 g2:g3  easy to work on multiple tasks simultaneously. 2 2.5 4 z=2.11, p<.04 z=4.82, p<.01 z=4.41, p<.01  easy to remember tasks unfinished in session 1.2 1.5 4 4.5 z=4.82, p<.01 z=4.78, p<.01 z=2.75, p<.01  easy to re-find information used in session 1. 2 2 4 4.5 z=4.78, p<.01 z=4.82, p<.01 z=2.58, p<.01  easy to remember the end date and progress of  each of unfinished tasks. 2 1 4 4 z=4.82, p<.01 z=4.81, p<.01 z=0.53, p>.05  table 2. experimental group’s median likert-scale ratings of mb tools in two sessions (questions for all groups, 2 session 2 only).  question g2 g3  mb is useful, and i want to  install it in my browser.  z=1.80, p>.07  4.5 5  easy to learn how to use mb. 5 5  easy to remember usage of mb. z=1.70, p>.08  4.5 4.5  mb was confusing to me. 1 1  mb helped me work on multiple  tasks simultaneously.  z=4.56, p<.01  2.5 4.5  easy to create a task. z=.44, p>.7  4 4  difficult to remember how to  create a new task.  z=.43, p>.60  3.5 3.5  mb took up too much space in  browser.  z=.15, p>.80  3.5 3.5  multiple task tab feature helpful. n/a 4.5  hibernate/resume helpful. 5 5  automatic naming task helpful. 5 5  mb helped me remember what i  did last week.2  5 5  mb was useful for my tasks. 1 3 z=4.67 , p<.01  3.5 z=4.67 , p<.01mb was useful for my tasks.2 5 5  schedule management helpful.1 3 z=4.06 , p<.01  3 z=4.48 , p<.01schedule management helpful.2 4 4.5 table 3. experimental groups median likert-scale ratings of  mb tools in two sessions.* (1 session 1, 2 session 2)  * when there was no significant difference between data from sessions 1  and 2, we used the two data sets as one sample and between groups u-test  results were presented, otherwise we additionally presented wilcoxon  test results between sessions.  chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 110


we also observed that the user performance improvement  brought by mt is as much as by mst. users with mt  support always showed better performance and experience in  almost all kinds of data we collected, especially when  multiple tasks were running simultaneously. it might be a  little surprising that in our experiment the overall  improvement in task time consumed brought about by mt is  close to that brought about by mst. we could not compare  mb against other prototypes in previous studies owing to  their unavailability, but according to our comparison, users  with support for both mt and mst showed significantly  better performance and experience in tasking switching, tab  using, navigating, and revisiting than users with support for  only mst.  one of the main unexplored questions here is that of users’  browsing pattern shifts when introducing the task concept  into a browser. as observed in this experiment, the  introduction greatly impacted users’ usage of browsers. it is  obvious that users will gradually cope with this impact and  alter their browsing behavior in many aspects, such as their  refinding and revisitation strategy, searching strategy, and  even collaborative strategy. these pattern shifts are more  likely to occur in long-term, real-world use than in the lab.  therefore, a long-term study is required to ascertain how  users will eventually adapt to the task concept in browsers  through exploring and trying out the new features, and  finally integrating them with their own browser habits.   we also acknowledge the limitations of this study. firstly,  we used a selected sample population consisting mainly of  university students with specific characteristics (using  firefox, having multitasking experience on the web). this  means that we cannot expect that our results will generalize  to a more general population. instead, the results of this  study have provided insight into how the introduction of the  task concept into browsers impacts skilled firefox users’  performance and experience when multitasking on the web.  although it is very likely that these results also apply to  skilled users of other browsers, further studies are needed.  secondly, although we decided to introduce the task concept  into a browser with 4 attributes based on our survey results,  there are possibly other attributes that can bring great benefit  to users, the importance of which users cannot appreciate  before actually experiencing them. we intend pursuing a  study in this direction to compare different impact factors for  all attributes of a task. finally, although we have tried our  best to simulate an ordinary multitasking scenario in our  experiment, the “hawthorne effect” [35] may still exist, and  a long-term study is needed to verify our results.   conclusions and future work  we have clarified two common patterns in multitasking on  the web, namely multiple tasks and multiple session task.  we found that unlike mst, mt has often been ignored in  previous studies and implementations. nevertheless we  found that supporting mt in a browser is as effective as  supporting mst for improving a user’s performance and  experience when multitasking on the web.  we have presented results from a pilot survey of users’  expectations of tasks in browsers and their task-related  browsing habits. these show that the four attributes of a task,  namely name, status, end date, and active time, are most  significant to users when coping with tasks in a browser.  we have presented the multitasking bar, a novel tool to help  users multitask on the web. with its help, users can define  task(s) and manage related web pages, and also switch  between, suspend and resume task(s) as required. it also  helps users in schedule management and releases their  cognitive burden by informing them of deadlines and time  consumed on task(s) when needed.  we have presented a user study on the impact of introducing  the task concept into a browser on users’ performance and  experience when multitasking on the web. this evaluation is  based on the mb. we found that with the mb’s help, the  performance and experience of users improved dramatically.  the results provide answers to the two research questions  posed in the introduction. introducing the task concept into a  browser definitely improves a user’s performance and  experience when multitasking on the web. therefore, it is  worthwhile considering when designing and implementing  browsers and tools.  future work includes extending this study to ascertain the  impact of introducing tasks into browsers for users who do  not use tabs, which was neglected in this work, and a broader  deployment of the mb to explore its impact over longer  periods of time and within a larger user population. future  development of the mb will focus on a better visualization  method, a more sophisticated task grouping algorithm, and  tighter and more seamless integration with history and  bookmark utilities of the browser.   references  1. save session : add-ons for firefox.   https://addons.mozilla.org/en-us/firefox/addon/4199.  2. session manager : add-ons for firefox.   https://addons.mozilla.org/en-us/firefox/addon/2324.  3. internet explorer plugin: tabsaver.   http://tabsaver.codeplex.com/.  4. multirow bookmarks toolbar : add-ons for firefox.   https://addons.mozilla.org/en-us/firefox/addon/6937.  5. group/sort tabs : add-ons for firefox.   https://addons.mozilla.org/en-us/firefox/addon/5627.  6. tab kit : add-ons for firefox.   https://addons.mozilla.org/en-us/firefox/addon/5447.  7. tabgroups manager : add-ons for firefox.   https://addons.mozilla.org/en-us/firefox/addon/10254.  8.   surveygizmo: http://www.surveygizmo.com/  9. tlogger. http://dubroy.com/tlogger/.  10. project home page.   http://office.microsoft.com/en-us/project/default.aspx.  chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 111


11. outlook home page.   http://office.microsoft.com/en-us/outlook/default.aspx.  12. igtd.  http://bargiel.home.pl/igtd/.  13. todoist.  http://todoist.com/.  14. burgess, p.w. real-world multitasking from a  cognitive neuroscience perspective. control of  cognitive processes: attention and performance xviii,  (2000), 465–472.  15. carlson, r.a. and sohn, m.h. cognitive control of  multistep routines: information processing and  conscious intentions. control of cognitive processes:  attention and performance xviii, (2000), 443.  16. the ucla internet report: surveying the digital future  http://www.digitalcenter.org/pdf/internetreportyearth ree.pdf.  17. cockburn a. and mckenzie b. what do web users do?  an empirical analysis of web use. international journal  of human-computer studies 54, (2001), 903-922.  18. czerwinski, m., horvitz, e., and wilhite, s. a diary  study of task switching and interruptions. proceedings  of the sigchi conference on human factors in  computing systems, acm (2004), 175-182.  19. gonzález, v.m. and mark, g. "constant, constant,  multi-tasking craziness": managing multiple working  spheres. proceedings of the sigchi conference on  human factors in computing systems, acm (2004),  113-120.  20. gvu’s 10th www user survey.  http://www.cc.gatech.edu/gvu/user_surveys/survey-19 98-10/.  21. iqbal, s.t. and horvitz, e. disruption and recovery of  computing tasks: field study, analysis, and directions.  proceedings of the sigchi conference on human  factors in computing systems, acm (2007), 677-686.  22. jhaveri, n. and räihä, k. the advantages of a  cross-session web workspace. chi '05 extended  abstracts on human factors in computing systems,  acm (2005), 1949-1952.  23. jones, w., bruce, h., and dumais, s. keeping found  things found on the web. proceedings of the tenth  international conference on information and knowledge  management, acm (2001), 119-126.  24. just, m.a., carpenter, p.a., keller, t.a., and emery,  l.z. interdependence of non-overlapping cortical  systems in dual cognitive task. neuroimage 14, ,  417-426.  25. kellar, m., watters, c., and shepherd, m. a field study  characterizing web-based information-seeking tasks.  journal of the american society for information  science and technology 58, 7 (2007), 999-1018.  26. lee, f.j. and taatgen, n.a. multitasking as skill  acquisition. proceedings of the twenty-fourth annual  conference of the cognitive science society, (2002),  572-577.  27. mackay, b. and carolyn watters. understanding and  supporting multi-session web tasks. proceedings of the  american society for information science and  technology 45, 1 (2008), 1-13.  28. mackay, b. and watters, c. exploring multi-session  web tasks. proceeding of the twenty-sixth annual  sigchi conference on human factors in computing  systems, acm (2008), 1187-1196.  29. mackay, b. and watters, c. building support for  multi-session tasks. proceedings of the 27th  international conference extended abstracts on human  factors in computing systems, acm (2009), 4273-4278.  30. mayer, m. web history tools and revisitation support: a  survey of existing approaches and directions.  foundations and trends® in human-computer  interaction 2, 3 (2007), 173-278.  31. mintzberg, h. the nature of managerial work.  prentice-hall englewood cliffs, nj, 1980.  32. mintzberg, h. structured observation as a method to  study managerial work. journal of management studies  7, 1 (1970), 87-104.  33. miyata, y. and norman, d.a. psychological issues in  support of multiple activities. user centered system  design, (1986), 265-284.  34. morris, d., morris, m.r., and venolia, g. searchbar: a  search-centric web history for task resumption and  information re-finding. proceeding of the twenty-sixth  annual sigchi conference on human factors in  computing systems, acm (2008), 1207-1216.  35. reiss, f. the hawthorne effect in a pilot program. 1979.  36. rubinstein, j.s., meyer, d.e., and evans, j.e.  executive control of cognitive processes in task  switching. journal of experimental psychology human  perception and performance 27, 4 (2001), 763-797.  37. sellen, a.j., murphy, r., and shaw, k.l. how  knowledge workers use the web. proceedings of the  sigchi conference on human factors in computing  systems: changing our world, changing ourselves,  acm (2002), 227-234.  38. spink, a., jansen, b.j., wolfram, d., and saracevic, t.  from e-sex to e-commerce: web search changes.  computer 35, 3 (2002), 107-109.  39. spink, a., park, m., jansen, b.j., and pedersen, j.  multitasking during web search sessions. information  processing & management 42, 1 (2006), 264-275.  40. university of southern california (usc) annenberg  school, c.f.t.d.f. center for the digital future: 2008  digital future report. 2009.  http://www.digitalcenter.org/pages/current_report.asp? intglobalid=19.  chi 2010: multitasking april 10–15, 2010, atlanta, ga, usa 112
